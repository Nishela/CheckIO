'''
Вы получили письмо от друга, которого вы не видели и не слышали какое-то время. В этом письме он дает вам указания о том, как найти скрытое сокровище.

В этой миссии Вы должны следовать данному списку инструкций, которые приведут вас к определенной точке на карте. Список инструкций - это строка, каждая буква этой строки указывает Вам направление следующего шага.

Буква «f» - указывает на то, что Вам нужно двигаться вперед, «b» - назад, «l» - влево, а «r» - вправо.

То есть, если список Ваших инструкций - «fflff», то Вы должны сделать два шага вперед, потом один шаг влево, а затем снова переместиться на два шага вперед.

Теперь давайте представим, что Вы находитесь в позиции (0,0). Продвинувшись вперед, Вы измените свою позицию на (0, 1). Сделав еще один шаг, она будет (0, 2). Ступив влево, Ваша позиция станет (-1, 2). И после последующих двух шагов вперед Ваши координаты будут (-1, 4).

Ваша цель заключается в том, чтобы найти конечные координаты. Точно так же, как в приведенном выше примере они были (-1, 4).

Входные данные: Строка.

Выходные данные: A tuple (или список) из двух ints

Пример:

follow("fflff") == (-1, 4)
follow("ffrff") == (1, 4)
follow("fblr") == (0, 0)
'''

from typing import Tuple
# from collections import Counter

def follow(instructions: str) -> Tuple[int, int]:
    counts = {itm: 0 for itm in ('f', 'b', 'l', 'r')}
    # c = Counter(instructions)
    for itm in instructions:
        counts[itm] += 1
    return counts['r'] - counts['l'], counts['f'] - counts['b']


if __name__ == '__main__':
    print("Example:")
    print(follow("fflff"))

    # These "asserts" are used for self-checking and not for an auto-testing
    assert follow("fflff") == (-1, 4)
    assert follow("ffrff") == (1, 4)
    assert follow("fblr") == (0, 0)
    print("Coding complete? Click 'Check' to earn cool rewards!")

